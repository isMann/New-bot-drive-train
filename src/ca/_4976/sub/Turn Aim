package ca._4976.sub;

import ca._4976.io.Controller;
import ca._4976.io.Input;
import ca._4976.io.Output;
import com.kauailabs.navx.frc.AHRS;
import com.sun.xml.internal.bind.v2.runtime.output.SAXOutput;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SerialPort;

/**
 * Created by Aavin & Michael Mann on 1/23/2016.
 */
public class Aim extends IterativeRobot {
    int state = 0;


    public void teleopPeriodic() {
        Controller.Primary.Button.A.isDownOnce();

        if (state == 0) {
            if (Controller.Primary.Button.X.isDownOnce() == true) {
                state = 1;
            }
            if (Controller.Primary.Button.B.isDownOnce() == true) {
                state = 2;
            }
        }
        if (state == 1) {
            if (Input.Digital.IR_L.get() && Input.Digital.IR_R.get()) {
                Output.Motor.DRIVE_LEFT_1.set(0);
                Output.Motor.DRIVE_LEFT_2.set(0);
                Output.Motor.DRIVE_RIGHT_1.set(0);
                Output.Motor.DRIVE_RIGHT_2.set(0);
                state = 0;
            } else {
                Output.Motor.DRIVE_LEFT_1.set(-0.4);
                Output.Motor.DRIVE_LEFT_2.set(-0.4);
                Output.Motor.DRIVE_RIGHT_1.set(-0.4);
                Output.Motor.DRIVE_RIGHT_2.set(-0.4);
            }

        }
        if (state == 2) {
            if (Input.Digital.IR_L.get() && Input.Digital.IR_R.get()) {
                Output.Motor.DRIVE_LEFT_1.set(0);
                Output.Motor.DRIVE_LEFT_2.set(0);
                Output.Motor.DRIVE_RIGHT_1.set(0);
                Output.Motor.DRIVE_RIGHT_2.set(0);
                state = 0;
            } else {
                Output.Motor.DRIVE_LEFT_1.set(0.4);
                Output.Motor.DRIVE_LEFT_2.set(0.4);
                Output.Motor.DRIVE_RIGHT_1.set(0.4);
                Output.Motor.DRIVE_RIGHT_2.set(0.4);
            }

        }
        System.out.println(Input.Digital.IR_L + "Left");
        System.out.println(Input.Digital.IR_R + "Right");
    }
}
